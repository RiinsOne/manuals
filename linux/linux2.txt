pwd - где мы находимся
ls - содержимое каталога (синим цветом - директории, белым файлы)
cd - перемещение по папкам
shift+pageUp and shift+pageDown - перелистывать вверх и вниз
du -hsx /etc/sysconfig/ - посмотреть размер папки
mkdir /backup - создание папки в корневом каталоге, если без слэша, то создаться в этом каталоге
cd.. - вернутся на каталог вверх
cp -r /etc/sysconfig/ /backup/ - скопировать папку из каталога в другую папку
cp crond /root/ - скопировать файл кронд в домашний каталог root
cd /root/ - перейти в каталог рут
rm crond - удалить файл
touch file - создать файл
vi readme - создать файл текстовый редактор
i - появится insert, чтобы начать редактировать в текстовом редакторе
esc - выйти из режима редактирования в текстовом редакторе
:wq - w это записать, q это выход
cat readme - посмотреть содержимого файла ридми в консоле
mv readme /backup/backup_list - переносим файл ридми в папку бэкап и перемеиновываем в бэкаплист
find / -name messages - искать в корне, т.е. по всей системе по параметру нэйм, т.е. ищем имя файла мессаджес
man find - руководство для утилиты файнд
стрелка вверх - повтор предыдущих команд
tail messages - по умолчанию выводит последние 10 записей
tail - 20 messages - последние 20 записей
head messages - первые 10 событий, аналогично и для первых 20 событий
grep kdump.service messages - логи связанные со службой кдамп сервис
tail -40 messages | grep kdump.service - сначала 40 последних строк и для них команду греп кдамп сервис
tail -40 messages | grep kdump.service | head -2 - т.е. из последнего вывода мы выведем только первые две строки
df -h - как разбиты жесткие диски и сколько на них использовано места
top - просмотр загруженности оперативная память, чтобы выйти - q
ps aux - просмотр всех процессов
ps aux | grep cron - найти процесс крон (служба планировщика задач)
kill 644 - убить процесс, в данном случае 644 это крон

cd /etc/sysconfig/network-scripts/
vi ifcfg-enp0s3 - открываем настройки сетевого адаптера текстовым редактором ВИ, :wq чтобы сохранить
	BOOTPROTO=static
	IPADDR=192.168.168.200
	NETMASK=255.255.255.0
	GATEWAY=192.168.168.1


	ONBOOT=yes
service network restart - перезапустить сетевую службу

vi /etc/resolv.conf - указать днс сервера
	nameserver 192.168.1.1 - в нашем случае днс сервер это наш роутер
ping 192.168.1.1 - пинг шлюз, чтобы проверить работу сети


useradd og - создать нового пользователя ог
passwd og - задать пароль для ог

visudo -f /etc/sudoers - список тех кому можно выполнять команды от имени администратора
	og	ALL=(ALL)	ALL

su og - перезайти под ог
vi /etc/ssh/sshd_config - перейти к настройке ssh и доступ будет закрыт, надо входить под sudo
sudo vi .... и ввести пароль
	#PermitRootLogin - снала раскоментировать, убрать решетку и поменять yes на no

sudo service sshd reload - перечитать файл конфигурации, чтобы применились изменения

ll - содержимое папки, но с большим количеством информации

sudo chown og:og /backup/ - поменяли владельца папки, потом через ll проверяем ещё раз
sudo chown -R og:og /backup/ - чтобы для всех встроенных подпапок и файлов, Р большая обязательно
sudo chmod 770 /backup/ - изменить права папки


sudo vi /etc/yum.conf - пакетный менеджер юм
	после строчки in /etc/yum.repos.d
	proxy=http://proxy.net.ru:3128
	proxy_username=vasya	(если есть авторизация, то плюс логин и пароль, если нет, то не нужно)
	proxy_password=some_password


cd /etc/yum.repos.d/ - папка настройка репозиториев
	sudo vi CentOS-Base.repo - базовые репозитории для нашего дистрибутива
	sudo vi CentOS-Media.repo - источник с диска

sudo yum update - обновить систему
sudo yum install nano - установить редактор нано
nano - запустить редактор нано
sudo yum install mc - редактор мс
mc - зайти в редактор мс, tab - перемещаться между окнами

sudo yum install ifconfig - установка ифконфиг, итог такого пакета нет
	yum provides ifconfig - чтобы выяснить в какой пакет входит ифконфиг
	sudo yum provides ifconfig - надо использовать судо, чтобы найти (входит в пакет net-tools)
	sudo yum install net-tools - установка пакета нет тулс
ifconfig - команда инконфиг
arp - команда arp

sudo yum install nslookup - такого пакета нет, выполним поиск
	sudo yum provides nslookup - ищем в каком пакете есть
	sudo yum install "и название пакета, выделяем текст и правой кнопкой мыши"
nslookup ya.ru - узнаем айпи адреса серверов яндекса

sudo yum provides telnet - пакет так и называется телнет
sudo yum install telnet - установка телнет
telnet - запустить телнет, кнтр-с для выхода

_____________________________________________________________

sudo shutdown -h now
ifconfig - посмотреть интерфейсы

sudo nmcli d - какие интерфейсы видит нетворк менеджер

sudo nmcli c add type ethernet con-name enp0s8 ifname enp0s8 ip4 192.168.250.1/24 - указываем тип езернет,
имя соединения соответствует имени устройства, далее имя интерфейса и айпи адрес с маской - для ДМЗ
sudo nmcli c add type ethernet con-name enp0s8 ifname enp0s9 ip4 192.168.251.1/24 - для СРВ
sudo nmcli c add type ethernet con-name enp0s8 ifname enp0s10 ip4 192.168.250.2/24 - для ЮЗЕР

sudo nmcli device connect enp0s8 - подключить соединения, аналогично для остальных

sudo iptables -L -v -n 	       - посмотреть какие правила уже есть
sudo systemctl stop firewalld - отключить демона фаерволд
sudo systemctl disable firewalld
sudo reboot

sudo yum install iptables-services - установить утилиты для айпитэйблс


sudo nano /etc/sysctl.conf - открыть этот файл, чтобы разрешить маршрутизацию траффика
	net.ipv4.ip_forward = 1 	- добавить эту строку
	sudo reboot - перезагрузить сервер

настройка фаервола
sudo iptables -A INPUT -i lo -j ACCEPT - локальный трафик для петлевого интерфейса лукбэк
sudo iptables -A OUTPUT -o lo -j ACCEPT
Добавили ключ -А чтобы добавить правило в конец нужной нам цепочки, в первом случае цепочка инпут во втором аутпут
lo - название интерфейса через который будет проходить траффик, в первом случае ключ -i т.е. интерфейс для входящего
трафика, во втором случае ключ -о т.е. для исходящего, а далее через ключ джей действия
которые необходимо приминить к пакетам которые попадают под эти правила

su - чтоб зайти под рутом
iptables-save > /etc/sysconfig/iptables - сохранить правила в файл
ctrl+d - выйти из под рута

sudo nano /etc/sysconfig/iptables - открыть сохраненный файл
* - зведочкой помечена таблица, в нашем случае таблица фильтер, далее через двоеточие указаны цепочки и их политики

sudo iptables -A OUTPUT -o enp0s3 -j ACCEPT    - разрешим исходящее соединение из самого сервера в интернет
данным правилом мы разрешаем исходящие соединения с нашего сервера, значит цепочка оутпут, для исходящего трафика
значит ключ -о

sudo iptables -A INPUT -p icmp -j ACCEPT
разрешим отправлять и принимать пинги на нашем сервере. Этим правилом мы разрешили всем пинговать наш сервер.
С помощью ключа -р мы указали протокол по которому будем принимать пакеты

sudo iptables -A OUTPUT -p icmp -j ACCEPT
тоже самое, но чтобы мы могли пинговать другие узлы

sudo iptables -A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
для трафика предназначенного нашему серверу, далее ключ -м для доп условия и само условие (контрэк - механизм
определения состояния и именно он позволяет работать с типами соединений), далее ключ стстейт и сами состояния

sudo iptables -A INPUT -p tcp -m conntrack --ctstate NEW -m tcp --dport 22 -j ACCEPT
доступ к серверу по ССХ. С помощью ключа -р указываем тип протокола, далее указываем нью, т.е. новое соединение
и номер порта

далее сохраняем все правила через su

sudo iptables -P INPUT DROP - меняем на ДРОП, чтобы запретить всё, что не соотв. нашим правилам.

ping 192.168.1.85 - пинг своей ВИНДОУС тачки

sudo iptables -P OUTPUT DROP
sudo iptables -P FORWARD DROP
аналогично и для оутпут и форвард

telnet yandex.ru 80
проверить доступ к сети интернет через телнет по http по порту 80

sudo iptables -t nat -A POSTROUTING -o enp0s3 -s 192.168.252.0/24 -j MASQUERADE
доступ к инету для сегмента ПОЛЬЗОВАТЕЛИ. Указываем таблицу НАТ, потому что в таблицу фильтр нат не настроишь
затем указываем в какую цепочку будем добавлять правила, нам нужно подменять адрес на выходе, поэтому
цепочка ПОСТРОУТИНГА она самая последняя в схеме, затем указываем интерфейс при прохождение через
который надо подменять трафик и ключом -s указываем сеть источника трафика, в качестве действия слово МАСКУРЕЙД,
это действие означает, что надо подменить адрес источника на адрес нашего сервера

sudo iptables -A FORWARD -p icmp -j ACCEPT
сначала разрешим асмп трафик

sudo iptables -A FORWARD -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
затем разрешим установленные или уже связанные действия

sudo iptables -A FORWARD -s 192.168.252.0/24 -p tcp -m conntrack --ctstate NEW -m multiport --dports
80,443 -j ACCEPT
затем разрешим открывать веб страницы
Правила применяются для новых соединений сети 192.168.252.0/24 и задали мультипорт по портам http и https

sudo iptables -A FORWARD -p tcp -m conntrack --ctstate NEW -m tcp --dport 53 -j ACCEPT
sudo iptables -A FORWARD -p udp -m conntrack --ctstate NEW -m udp --dport 53 -j ACCEPT
нужно разрешить трафик для днс

не забываем сохранять правила


чтобы межсетевой экран включался каждый раз при запуске системы его надо добавить в автозагрузку
sudo chkconfig iptables on - старая команда, но и сейчас тоже доступна, но мы будем использовать другую
sudo systemctl enable iptables
sudo reboot

посмотрим текущие правила фаервола
sudo iptables -L -v -n

sudo iptables -L -v -n -t nat     - таблица нат

_________________________________________________________________
dhcp

сначала поменяеим имя нашего сервера
sudo nmcli general hostname fw.og

sudo yum search dhcp
sudo yum install dhcp

nslookup yandex.ru - проверить днс
sudo nmcli c mod enp0s3 ipv4.dns "192.168.1.1" - добавить днс с помощью нмклай (в моем случае всё норм)
sudo systemctl restart network - перезапустить сетевую службу

cd /etc/dhcp - отказано в доступе
sudo mc - открыть файловый менеджер

выбираем dhcpd.conf и F3

nano /usr/share/doc/dhcp-4.2.5/dhcpd.conf.example - открыть пример файла настройки диашсипи

sudo cp /usr/share/doc/dhcp-4.2.5/dhcpd.conf.example /etc/dhcp/dhcpd.conf - скопировать в директорию
потом октрываем скопированный файл

в файле меняем
	option domain-name	"og"
	option domain-name-servers 	192.168.1.1
	там где начинается с option - это параметры сервера, которые даются клиенту.

	закоментируем решеткой все параметры сети

	Настраиваем для юзера настройки сети (см. пример в файле).


sudo systemctl enable dhcpd - добавить диашсипи сервер в автозагрузку
sudo systemctl start dhcpd - включить

потом проверить диашсипи на пользовательском ПК

sudo nano /var/lib/dhcpd/dhcpd.leases - информация о выданных адресах хранится в этом файле

sudo nano /etc/rsyslog.conf - настроить логи
	ctrl+w (поиск в нано) и ищем local7.
	меняем описание и меняем место сохранение логов /var/log/dhcpd.log

sudo systemctl restart rsyslog - перезапустим рсислог
sudo systemctl restart dhcpd - перезапустим диашсипи сервер
sudo nano /var/log/dhcpd.log - посмотрим что у нас в файле





