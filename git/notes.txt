# поменить директорию, как git репозиторий
git init

# узнать статус, текущее состояние репозитория
git status

# добавить файл в версионирование (т.е. будем следить)
git add hello.txt

# покажет обновленный статус репозитория
git status

# зафиксировать точку
git commit -m "Added hello.txt"

# история коммитов
git log

# commit без команды git add
git commit -am "Added some text"

# показывает разницу между последним состоянием и то, что мы добавили и не закоммители
git diff

# отменяем изменения до последнего зафиксированного состояния
git checkout hello.txt

# вернутся на состояние к конкретному коммиту
# номер коммита можно увидеть через git log
git checkout e1baf74d2960438439260860eab333e36d5a14e2
# git status покажет безымянное состояние и что мы не на ветке мастер

# перейти на ветку мастер
git checkout master

# посмотреть количество веток
git branch

# создать ветку с именем
git branch about_js

# переключиться на ветку about_js
git checkout about_js
# после любые коммиты будут на этой ветке
# git status также показывает какая ветка сейчас активна

# если переключимся в мастер, то новые изменения не будут видны
# если посмотрим log, то будет отдельная ветка развития

# пушить каждую ветку на гитхаб нужно отдельно
